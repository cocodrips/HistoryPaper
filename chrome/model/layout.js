// Generated by CoffeeScript 1.6.3
(function() {
  this.Layout = (function() {
    function Layout(histories) {
      this.histories = histories;
      this.aspect = 1.3;
      this.clusterNum = histories ? histories.length : 0;
      this.squareSize = 0;
      this.rows = 0;
      this.cols = 0;
    }

    Layout.prototype.drawArticles = function() {
      var h, w;
      w = window.innerWidth * .8;
      h = window.innerHeight;
      this.calcSquareSize(w, h);
      this.setPositionInfo2Histories(w);
      console.log(this.histories);
      return this.arrangeArticles(this.histories);
    };

    Layout.prototype.calcSquareSize = function(width, height) {
      var cols, rectangleWidth, rows, squareSize;
      rectangleWidth = width / this.aspect;
      squareSize = height;
      cols = 0;
      rows = 1;
      while (cols * rows < this.clusterNum) {
        cols++;
        squareSize = height / cols;
        rows = Math.round(rectangleWidth / squareSize);
      }
      this.cols = cols;
      this.rows = rows;
      return this.squareSize = squareSize;
    };

    Layout.prototype.setPositionInfo2Histories = function(w) {
      var articleHeight, articleWidth, c, obj, r, _i, _ref, _results;
      articleWidth = this.squareSize * (w / (this.squareSize * this.cols));
      articleHeight = this.squareSize;
      _results = [];
      for (c = _i = 0, _ref = this.cols; 0 <= _ref ? _i < _ref : _i > _ref; c = 0 <= _ref ? ++_i : --_i) {
        _results.push((function() {
          var _j, _ref1, _results1;
          _results1 = [];
          for (r = _j = 0, _ref1 = this.rows; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; r = 0 <= _ref1 ? ++_j : --_j) {
            obj = this.histories[(c * this.rows) + r];
            if (obj) {
              obj.left = r * articleWidth;
              obj.top = c * articleHeight;
              obj.width = articleWidth;
              _results1.push(obj.height = articleHeight);
            } else {
              _results1.push(void 0);
            }
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    Layout.prototype.arrangeArticles = function(histories) {
      return d3.select("#main-container").selectAll("article").data(histories).enter().append("article").attr("class", "article").style("width", function(d) {
        return d.width + "px";
      }).style("height", function(d) {
        return d.height + "px";
      }).style("top", function(d) {
        return d.top + "px";
      }).style("left", function(d) {
        return d.left + "px";
      }).append("h2").text(function(d) {
        return d.title;
      });
    };

    return Layout;

  })();

}).call(this);
