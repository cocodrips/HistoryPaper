// Generated by CoffeeScript 1.6.3
(function() {
  var drawWordList, getGroup;

  this.searchWordList = function(hashmap) {
    var i, keywords, titles,
      _this = this;
    titles = [];
    hashmap.forEach(function(page) {
      var q;
      if (page.url.indexOf("https://www.google.co.jp/") !== -1) {
        q = getGroup(decodeURI(page.url), /#q=(.*)\&/, 1);
        if (!q) {
          q = getGroup(decodeURI(page.url), /#q=(.*)/, 1);
        }
        if (q) {
          q = q.split(/[\s,\+]+/);
          return q.forEach(function(title) {
            if (!titles[title]) {
              return titles[title] = 1;
            } else {
              return titles[title] += 1;
            }
          });
        }
      }
    });
    keywords = [];
    for (i in titles) {
      keywords.push({
        'keyword': i,
        'times': titles[i]
      });
    }
    keywords.sort(function(a, b) {
      if (a['times'] < b['times']) {
        return 1;
      } else {
        return -1;
      }
    });
    drawWordList(keywords);
    return keywords;
  };

  getGroup = function(content, re, groupNum) {
    var m;
    m = content.match(re);
    if (m && m.length >= groupNum) {
      return m[groupNum];
    }
    return "";
  };

  drawWordList = function(sorted) {
    var count, keywordsHtml, s;
    keywordsHtml = "";
    count = 0;
    for (s in sorted) {
      if (count++ < 50) {
        keywordsHtml += "<span style='font-size:" + (12 + Math.min(sorted[s].times * 2, 20)) + "px;'><pre>" + sorted[s].keyword + "</pre></span>";
      }
    }
    $('#key-cloud').text("");
    return $('#key-cloud').append(keywordsHtml);
  };

}).call(this);
